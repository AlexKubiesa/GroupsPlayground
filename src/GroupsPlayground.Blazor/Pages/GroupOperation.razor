@page "/groupoperation"

@using Microsoft.AspNetCore.WebUtilities
@using GroupsPlayground.Domain
@using GroupsPlayground.Persistence
@inject NavigationManager navigationManager

<h1>Cayley table</h1>

<p>Define the group operation by filling in the Cayley table.</p>

<EditForm Model="@model" OnValidSubmit="@OnValidSubmit">
    <table class="table">
        <thead>
        <tr>
            <th></th>
            @foreach (var element in model.Elements)
            {
                <th>@element.Symbol</th>
            }
        </tr>
        </thead>
        <tbody>
        @for (int rowIndex = 0; rowIndex < model.Elements.Length; rowIndex++)
        {
            var element = model.Elements[rowIndex];
            <tr>
                <th>@element.Symbol</th>
                @for (int columnIndex = 0; columnIndex < model.Elements.Length; columnIndex++)
                {
                    var product = model.Products[rowIndex][columnIndex];
                    <td><InputText @bind-Value="product.Symbol" /></td>
                }
            </tr>
        }
        </tbody>
    </table>
    <button type="submit">Finish</button>
</EditForm>

@code {
    private GroupOperationModel model;

    protected override void OnInitialized()
    {
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        var components = QueryHelpers.ParseQuery(uri.Query);
        string name = components["name"].Single();
        int size = int.Parse(components["size"].Single());
        model = new GroupOperationModel(name, size);
    }

    private void OnValidSubmit()
    {
        using Session session = new();
        var group = new Group(Guid.NewGuid(), model.Name, model.CayleyTable);
        session.GroupRepository.AddGroup(group);
        session.SaveChanges();
        navigationManager.NavigateTo("/");
    }
}
